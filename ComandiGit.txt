- git init --> CREA LA REPO LOCALE; (apriamo la git bash nella cartella deel progetto);

- git status --> CONTROLLA LO STATO DELLA REPO (SE C'E' QUALCHE FILE MODIFICATO, NON COMMITTATO ECC..);

- git add nomeFile --> TRACCIA UN FILE;

- git add .ext --> MI TRACCIA I FILE CON ESTENSIONE .ext;

- git add . --> TRACCIA TUTTI I FILE PRESENTI;

- git rm --cached <file>... --> RIMUOVE UNO O PIU' FILE DALLA STAGING AREA;

- git commit -m "messaggio del commit" --> SALVA I FILE TRACCIATI NELLA REPO LOCAL;,

- git branch -M main --> CREA UN BRANCH DI NOME "MAIN" DI BASE PER COLLEGARLO AL REPO REMOTO;

- git remote add origin + URL (https://github.com/vostroRepository/TestGit.git) --> COLLEGA IL REPO LOCALE AD UNA REPO REMOTA;

- git push -u origin main --> ESEGUE IL PUSH DI TUTTO IL CONTENUTO DELLA REPO LOCALE SULLA REPO REMOTA;

- git branch nomeBranch --> STACCO UN NUOVO BRANCH DI NOME "nomeBranch";

- git checkout  nomeBranch --> MI SPOSTO SUL NUOVO BRANCH (POICHE' LA MIGRAZIONE NON E' AUTOMATICA ALLA CREAZIONE DI UN NUOVO BRANCH);

- git touch nuovoFile --> CREA UN NUOVO FILE DA TERMINALE;

- git branch --> STAMPA UN ELENCO DI BRANCH;

- git push --set-upstream origin sviluppo --> 

- git merge nomeBranch --> UNISCE I BRANCH;

- git branch -D nomeBranch--> MI FORZA LA CANCELLAZIONE DI UN BREANCH NON ANCORA MERGHIATO; 

- git branch -d nomeBranch --> CANCELLA UN BRANCH CONSUMATO E AGGREGATO AL BRANCH PRINICIPALE E QUINDI NON HA MOTIVO DI ESISTERE ANCORA;

- git branch --no-merged --> ELENCO DI BRANCH SUL QUALE NON E' STATO FATTO ANCORA NESSUN MERGE;

- git tag v1.0.0 --> TAG DI TIPO LIGHTWEIGHT;

- git tag -a v1.1.0 -m "Messaggio" --> TAG DI TIPO ANNOTATED PIU' COMPLETO RISPETTO AL LIGHTWEIGHT;

- git tag -->  PER VISUALIZZARE TUTTI I TAG RILASCIATI;

- git remote -v --> 

- git fetch --> MI SCARICA DEI FILE PRESENTI SULLA REPO REMOTA MA NON LO IMPORT NEL MIO PROGETTO LOCALE;

- git pull --> SCARICA I FILE DELLA REPO REMOTA E LI IMPORTA DIRETTAMENTE NELLA MIA REPO LOCALE;

- git log --> ANDIAMO A STAMPARE IN CONSOLE L'ELENCO DEI COMMIT EFFETTUATI;

- git log --pretty= oneline -3 --> MOSTRA IN CONSOLE GLI ULTIMI TRE COMMIT EFFETTUATI;



- GIT FLOW:

- master --> RAMO PRINICPALE
- develop --> RAMO DI SVILUPPO
- hotfix --> RAMO CORREZIONE BUG
- feature --> RAMO AGGIUNT FUNZIONALITA'
- release --> RAMO RILASCIO

